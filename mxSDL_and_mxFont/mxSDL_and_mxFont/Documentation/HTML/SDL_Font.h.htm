<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>SDL_Font.h</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset= Windows-1252">

</head>

<BODY BGCOLOR="#FFFFFF">
<PRE><FONT COLOR="#000099">#ifndef _SDL_FONT_H_
#define _SDL_FONT_H_
#include&lt;SDL.h&gt;
#include&lt;iostream&gt;
#include&lt;fstream&gt;

#include&lt;string&gt;
#include&lt;cstdarg&gt;
</FONT><FONT COLOR="#990000">
inline</FONT><FONT COLOR="#FF6633"> int</FONT> SDL_getRval<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> x<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF0000">

	return</FONT><B><FONT COLOR="#663300"> (</FONT></B><FONT COLOR="#FF6633">unsigned char</FONT><B><FONT COLOR="#663300">)</FONT></B> x<B><FONT COLOR="#663300">;   
}</FONT></B><FONT COLOR="#990000">
inline</FONT><FONT COLOR="#FF6633"> int</FONT> SDL_getGval<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> x<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF0000">

	return</FONT><B><FONT COLOR="#663300"> (</FONT></B><FONT COLOR="#FF6633">unsigned char</FONT><B><FONT COLOR="#663300">) (</FONT></B><FONT COLOR="#FF6633">unsigned int</FONT><B><FONT COLOR="#663300">)</FONT></B> x<B><FONT COLOR="#663300"> &gt;&gt;</FONT></B><FONT COLOR="#999900"> 8</FONT><B><FONT COLOR="#663300">;
}</FONT></B><FONT COLOR="#990000">
inline</FONT><FONT COLOR="#FF6633"> int</FONT> SDL_getBval<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> x<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF0000">

	return</FONT><B><FONT COLOR="#663300"> ((</FONT></B><FONT COLOR="#FF6633">unsigned char</FONT><B><FONT COLOR="#663300">)((</FONT></B>x<B><FONT COLOR="#663300">)&gt;&gt;</FONT></B><FONT COLOR="#999900">16</FONT><B><FONT COLOR="#663300">));
}</FONT></B><FONT COLOR="#990000">


inline</FONT><FONT COLOR="#FF6633"> void</FONT> SDL_SetPixel<B><FONT COLOR="#663300">(</FONT></B>SDL_Surface<B><FONT COLOR="#663300"> *</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B> Uint32 the_color<B><FONT COLOR="#663300">) {</FONT></B>

		Uint8<B><FONT COLOR="#663300"> *</FONT></B>ubuff8<B><FONT COLOR="#663300">;</FONT></B>
		Uint16<B><FONT COLOR="#663300"> *</FONT></B>ubuff16<B><FONT COLOR="#663300">;</FONT></B>
		Uint32<B><FONT COLOR="#663300"> *</FONT></B>ubuff32<B><FONT COLOR="#663300">;</FONT></B>

		Uint32 color<B><FONT COLOR="#663300"> =</FONT></B> the_color<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
		char</FONT> c1<B><FONT COLOR="#663300">,</FONT></B> c2<B><FONT COLOR="#663300">,</FONT></B> c3<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">(</FONT></B>SDL_MUSTLOCK<B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">)) {</FONT></B><FONT COLOR="#FF0000">
			if</FONT><B><FONT COLOR="#663300">(</FONT></B>SDL_LockSurface<B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">) &lt;</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">)</FONT></B><FONT COLOR="#FF0000">

				return</FONT><B><FONT COLOR="#663300">;
		}</FONT></B><FONT COLOR="#FF0000">

		switch</FONT><B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>format<B><FONT COLOR="#663300">-&gt;</FONT></B>BytesPerPixel<B><FONT COLOR="#663300">)
		{</FONT></B><FONT COLOR="#FF0000">
		case</FONT><FONT COLOR="#999900"> 1</FONT><B><FONT COLOR="#663300">:</FONT></B>

			ubuff8<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">*)</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300">;</FONT></B>
			ubuff8<B><FONT COLOR="#663300"> += (</FONT></B>y<B><FONT COLOR="#663300"> *</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300">) +</FONT></B> x<B><FONT COLOR="#663300">;
			*</FONT></B>ubuff8<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">)</FONT></B> color<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

			break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

		case</FONT><FONT COLOR="#999900"> 2</FONT><B><FONT COLOR="#663300">:</FONT></B>
			ubuff8<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">*)</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300">;</FONT></B>

			ubuff8<B><FONT COLOR="#663300"> += (</FONT></B>y<B><FONT COLOR="#663300"> *</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300">) + (</FONT></B>x<B><FONT COLOR="#663300">*</FONT></B><FONT COLOR="#999900">2</FONT><B><FONT COLOR="#663300">);</FONT></B>

			ubuff16<B><FONT COLOR="#663300"> = (</FONT></B>Uint16<B><FONT COLOR="#663300">*)</FONT></B> ubuff8<B><FONT COLOR="#663300">;
			*</FONT></B>ubuff16<B><FONT COLOR="#663300"> = (</FONT></B>Uint16<B><FONT COLOR="#663300">)</FONT></B> color<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

			break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

		case</FONT><FONT COLOR="#999900"> 3</FONT><B><FONT COLOR="#663300">:</FONT></B>
			ubuff8<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">*)</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300">;</FONT></B>

			ubuff8<B><FONT COLOR="#663300"> += (</FONT></B>y<B><FONT COLOR="#663300"> *</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300">) + (</FONT></B>x<B><FONT COLOR="#663300">*</FONT></B><FONT COLOR="#999900">3</FONT><B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

			if</FONT><B><FONT COLOR="#663300">(</FONT></B>SDL_BYTEORDER<B><FONT COLOR="#663300"> ==</FONT></B> SDL_LIL_ENDIAN<B><FONT COLOR="#663300">) {</FONT></B>
				c1<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0xFF0000</FONT><B><FONT COLOR="#663300">) &gt;&gt;</FONT></B><FONT COLOR="#999900"> 16</FONT><B><FONT COLOR="#663300">;</FONT></B>

				c2<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0x00FF00</FONT><B><FONT COLOR="#663300">) &gt;&gt;</FONT></B><FONT COLOR="#999900"> 8</FONT><B><FONT COLOR="#663300">;</FONT></B>
				c3<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0x0000FF</FONT><B><FONT COLOR="#663300">);
			}</FONT></B><FONT COLOR="#FF0000"> else</FONT><B><FONT COLOR="#663300"> {</FONT></B>

				c3<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0xFF0000</FONT><B><FONT COLOR="#663300">) &gt;&gt;</FONT></B><FONT COLOR="#999900"> 16</FONT><B><FONT COLOR="#663300">;</FONT></B>
				c2<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0x00FF00</FONT><B><FONT COLOR="#663300">) &gt;&gt;</FONT></B><FONT COLOR="#999900"> 8</FONT><B><FONT COLOR="#663300">;</FONT></B>

				c1<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0x0000FF</FONT><B><FONT COLOR="#663300">);
			}</FONT></B>
			ubuff8<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">0</FONT><B><FONT COLOR="#663300">] =</FONT></B> c3<B><FONT COLOR="#663300">;</FONT></B>

			ubuff8<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">1</FONT><B><FONT COLOR="#663300">] =</FONT></B> c2<B><FONT COLOR="#663300">;</FONT></B>
			ubuff8<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">2</FONT><B><FONT COLOR="#663300">] =</FONT></B> c1<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

			break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
		case</FONT><FONT COLOR="#999900"> 4</FONT><B><FONT COLOR="#663300">:</FONT></B>
			ubuff8<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">*)</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300">;</FONT></B>

			ubuff8<B><FONT COLOR="#663300"> += (</FONT></B>y<B><FONT COLOR="#663300">*</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300">) + (</FONT></B>x<B><FONT COLOR="#663300">*</FONT></B><FONT COLOR="#999900">4</FONT><B><FONT COLOR="#663300">);</FONT></B>
			ubuff32<B><FONT COLOR="#663300"> = (</FONT></B>Uint32<B><FONT COLOR="#663300">*)</FONT></B>ubuff8<B><FONT COLOR="#663300">;
			*</FONT></B>ubuff32<B><FONT COLOR="#663300"> =</FONT></B> color<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

			break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
		default</FONT><B><FONT COLOR="#663300">:</FONT></B>
			std<B><FONT COLOR="#663300">::</FONT></B>cerr<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> "Error Unknown BitDepth!\n"</FONT><B><FONT COLOR="#663300">;
		}</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">(</FONT></B>SDL_MUSTLOCK<B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">)) {</FONT></B>
			SDL_UnlockSurface<B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">);
		}
	}</FONT></B><FONT COLOR="#990000">

struct</FONT> SDL_Font<B><FONT COLOR="#663300"> {</FONT></B><FONT COLOR="#FF6633">

	int</FONT> mx<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
	int</FONT> my<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
	int</FONT> tcolor<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#990000">

	struct</FONT> letter<B><FONT COLOR="#663300"> {</FONT></B><FONT COLOR="#FF6633">
		int</FONT><B><FONT COLOR="#663300"> **</FONT></B>fnt_ptr<B><FONT COLOR="#663300">;
	};</FONT></B>
	letter letters<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">128</FONT><B><FONT COLOR="#663300">];
};</FONT></B><FONT COLOR="#990000">

inline</FONT><FONT COLOR="#FF6633"> int</FONT> SDL_GetFX<B><FONT COLOR="#663300">(</FONT></B>SDL_Font<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633">int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> nw<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF6633">

	int</FONT> xp<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">float</FONT><B><FONT COLOR="#663300">)</FONT></B>x<B><FONT COLOR="#663300"> *</FONT></B><FONT COLOR="#FF6633"> float</FONT><B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">) / (</FONT></B><FONT COLOR="#FF6633">float</FONT><B><FONT COLOR="#663300">)</FONT></B>nw<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">		
	return</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">(</FONT></B>xp<B><FONT COLOR="#663300">);
}</FONT></B><FONT COLOR="#990000">

inline</FONT><FONT COLOR="#FF6633"> int</FONT> SDL_GetFZ<B><FONT COLOR="#663300">(</FONT></B>SDL_Font<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> nh<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF6633">

	int</FONT> yp<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">float</FONT><B><FONT COLOR="#663300">)</FONT></B>y<B><FONT COLOR="#663300"> *</FONT></B><FONT COLOR="#FF6633"> float</FONT><B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300">) / (</FONT></B><FONT COLOR="#FF6633">float</FONT><B><FONT COLOR="#663300">)</FONT></B>nh<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">			
	return</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">(</FONT></B>yp<B><FONT COLOR="#663300">);
}</FONT></B><FONT COLOR="#990000">



template</FONT><B><FONT COLOR="#663300">&lt;</FONT></B><FONT COLOR="#990000">class</FONT> type<B><FONT COLOR="#663300">&gt;</FONT></B><FONT COLOR="#FF6633">
void</FONT> SDL_zero<B><FONT COLOR="#663300">(</FONT></B>type<B><FONT COLOR="#663300"> *</FONT></B>t<B><FONT COLOR="#663300">) {</FONT></B>

	memset<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">void</FONT><B><FONT COLOR="#663300">*)</FONT></B>t<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B>type<B><FONT COLOR="#663300">));
}</FONT></B><FONT COLOR="#FF6633">

void</FONT> SDL_free_font<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#990000">struct</FONT> SDL_Font<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">) {</FONT></B>

	SDL_zero<B><FONT COLOR="#663300">&lt;</FONT></B>SDL_Font<B><FONT COLOR="#663300">&gt;(</FONT></B>m<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

	for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> l<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300"> &lt;=</FONT></B><FONT COLOR="#999900"> 127</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">)</FONT></B><FONT COLOR="#FF0000">
			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#990000">

				delete</FONT><B><FONT COLOR="#663300"> []</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>i<B><FONT COLOR="#663300">];</FONT></B>

	m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B>
	m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;
}</FONT></B><FONT COLOR="#FF6633">

void</FONT> SDL_init_font<B><FONT COLOR="#663300">(</FONT></B>SDL_Font<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> width<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> height<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> color<B><FONT COLOR="#663300">) {</FONT></B>

	SDL_free_font<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">);</FONT></B>
	m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300"> =</FONT></B> width<B><FONT COLOR="#663300">;</FONT></B>
	m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300"> =</FONT></B> height<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

	for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> l<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300"> &lt;=</FONT></B><FONT COLOR="#999900"> 127</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300">++) {</FONT></B>

		m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#990000"> new</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">*[</FONT></B>width<B><FONT COLOR="#663300">];</FONT></B><FONT COLOR="#FF0000">

		for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> p<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300"> &lt;</FONT></B> width<B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300">++) {</FONT></B>

			m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">] =</FONT></B><FONT COLOR="#990000"> new</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">[</FONT></B>height<B><FONT COLOR="#663300">];
		}</FONT></B><FONT COLOR="#FF0000">

		for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> width<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> z<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300"> &lt;</FONT></B> height<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300">++) {</FONT></B>

				m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>i<B><FONT COLOR="#663300">][</FONT></B>z<B><FONT COLOR="#663300">] =</FONT></B> color<B><FONT COLOR="#663300">;
			}
		}
	}</FONT></B>

	m<B><FONT COLOR="#663300">-&gt;</FONT></B>tcolor<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0x0</FONT><B><FONT COLOR="#663300">;
}</FONT></B><FONT COLOR="#FF6633">

void</FONT> SDL_write_font<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#990000">struct</FONT> SDL_Font<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> char</FONT><B><FONT COLOR="#663300"> *</FONT></B>font_name<B><FONT COLOR="#663300">) {</FONT></B>

	std<B><FONT COLOR="#663300">::</FONT></B>fstream file<B><FONT COLOR="#663300">;</FONT></B>
	file<B><FONT COLOR="#663300">.</FONT></B>open<B><FONT COLOR="#663300">(</FONT></B>font_name<B><FONT COLOR="#663300">,</FONT></B> std<B><FONT COLOR="#663300">::</FONT></B>ios<B><FONT COLOR="#663300">::</FONT></B>binary<B><FONT COLOR="#663300"> |</FONT></B> std<B><FONT COLOR="#663300">::</FONT></B>ios<B><FONT COLOR="#663300">::</FONT></B>out<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

	if</FONT><B><FONT COLOR="#663300">(</FONT></B>file<B><FONT COLOR="#663300">.</FONT></B>is_open<B><FONT COLOR="#663300">()) {</FONT></B><FONT COLOR="#FF6633">
		int</FONT> q<B><FONT COLOR="#663300"> = -</FONT></B><FONT COLOR="#999900">100</FONT><B><FONT COLOR="#663300">;</FONT></B>

		file<B><FONT COLOR="#663300">.</FONT></B>write<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>q<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000">sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>
		file<B><FONT COLOR="#663300">.</FONT></B>write<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>

		file<B><FONT COLOR="#663300">.</FONT></B>write<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>

		file<B><FONT COLOR="#663300">.</FONT></B>write<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>tcolor<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000">sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B><FONT COLOR="#FF0000">
		for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> l<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300"> &lt;</FONT></B><FONT COLOR="#999900"> 127</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#FF0000">

			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#FF0000"> 
				for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> z<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300">++)</FONT></B>

					file<B><FONT COLOR="#663300">.</FONT></B>write<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>i<B><FONT COLOR="#663300">][</FONT></B>z<B><FONT COLOR="#663300">],</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>

		file<B><FONT COLOR="#663300">.</FONT></B>close<B><FONT COLOR="#663300">();
	}
}</FONT></B><FONT COLOR="#FF6633">

bool</FONT> SDL_read_font<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#990000">struct</FONT> SDL_Font<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> const</FONT><FONT COLOR="#FF6633"> char</FONT><B><FONT COLOR="#663300"> *</FONT></B>font_name<B><FONT COLOR="#663300">) {</FONT></B>

	std<B><FONT COLOR="#663300">::</FONT></B>fstream file<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
	int</FONT> mx<B><FONT COLOR="#663300"> ,</FONT></B> my<B><FONT COLOR="#663300">;</FONT></B>
	SDL_free_font<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">);</FONT></B>

	file<B><FONT COLOR="#663300">.</FONT></B>open<B><FONT COLOR="#663300">(</FONT></B>font_name<B><FONT COLOR="#663300">,</FONT></B> std<B><FONT COLOR="#663300">::</FONT></B>ios<B><FONT COLOR="#663300">::</FONT></B>binary<B><FONT COLOR="#663300"> |</FONT></B> std<B><FONT COLOR="#663300">::</FONT></B>ios<B><FONT COLOR="#663300">::</FONT></B>in<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

	if</FONT><B><FONT COLOR="#663300">(</FONT></B>file<B><FONT COLOR="#663300">.</FONT></B>is_open<B><FONT COLOR="#663300">() &amp;&amp;</FONT></B> file<B><FONT COLOR="#663300">.</FONT></B>good<B><FONT COLOR="#663300">()) {</FONT></B><FONT COLOR="#FF6633">
		int</FONT> q<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B>

		file<B><FONT COLOR="#663300">.</FONT></B>read<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>q<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000">sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B><FONT COLOR="#FF0000">
		if</FONT><B><FONT COLOR="#663300">(</FONT></B>q<B><FONT COLOR="#663300"> == -</FONT></B><FONT COLOR="#999900">100</FONT><B><FONT COLOR="#663300">) {</FONT></B>

			file<B><FONT COLOR="#663300">.</FONT></B>read<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>mx<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>
			file<B><FONT COLOR="#663300">.</FONT></B>read<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>my<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>

			file<B><FONT COLOR="#663300">.</FONT></B>read<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>tcolor<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>

			m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300"> =</FONT></B> mx<B><FONT COLOR="#663300">;</FONT></B>
			m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300"> =</FONT></B> my<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

			if</FONT><B><FONT COLOR="#663300">(</FONT></B>mx<B><FONT COLOR="#663300"> &lt;</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300"> ||</FONT></B> mx<B><FONT COLOR="#663300"> &lt;</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300"> ||</FONT></B> mx<B><FONT COLOR="#663300"> &gt;</FONT></B><FONT COLOR="#999900"> 250</FONT><B><FONT COLOR="#663300"> ||</FONT></B> my<B><FONT COLOR="#663300"> &gt;</FONT></B><FONT COLOR="#999900"> 250</FONT><B><FONT COLOR="#663300">) {</FONT></B>

				file<B><FONT COLOR="#663300">.</FONT></B>close<B><FONT COLOR="#663300">();</FONT></B>
				SDL_init_font<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">20</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">25</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">0x0</FONT><B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

				return</FONT><B><FONT COLOR="#000000"> false</FONT></B><B><FONT COLOR="#663300">;
			}</FONT></B><FONT COLOR="#FF0000">
			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> l<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300"> &lt;=</FONT></B><FONT COLOR="#999900"> 127</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300">++) {</FONT></B>

				m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#990000"> new</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">*[</FONT></B>mx<B><FONT COLOR="#663300">];</FONT></B><FONT COLOR="#FF0000">

				for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> p<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300"> &lt;</FONT></B> mx<B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300">++) {</FONT></B>

					m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">] =</FONT></B><FONT COLOR="#990000"> new</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">[</FONT></B>my<B><FONT COLOR="#663300">];
				}</FONT></B><FONT COLOR="#FF0000">

				for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#FF0000">

					for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> z<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#FF0000">

						if</FONT><B><FONT COLOR="#663300">(!</FONT></B>file<B><FONT COLOR="#663300">.</FONT></B>eof<B><FONT COLOR="#663300">() &amp;&amp;</FONT></B> file<B><FONT COLOR="#663300">.</FONT></B>good<B><FONT COLOR="#663300">())</FONT></B>
							file<B><FONT COLOR="#663300">.</FONT></B>read<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>i<B><FONT COLOR="#663300">][</FONT></B>z<B><FONT COLOR="#663300">],</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));
			}</FONT></B>

			file<B><FONT COLOR="#663300">.</FONT></B>close<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#FF0000">
			return</FONT><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300">;
		}</FONT></B><FONT COLOR="#FF0000">
		else</FONT><B><FONT COLOR="#663300"> {</FONT></B>

			SDL_zero<B><FONT COLOR="#663300">&lt;</FONT></B>SDL_Font<B><FONT COLOR="#663300">&gt;(</FONT></B>m<B><FONT COLOR="#663300">);</FONT></B>
			SDL_init_font<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">20</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">25</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">0x0</FONT><B><FONT COLOR="#663300">);</FONT></B>

			file<B><FONT COLOR="#663300">.</FONT></B>close<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#FF0000">
			return</FONT><B><FONT COLOR="#000000"> false</FONT></B><B><FONT COLOR="#663300">;
		}
	}</FONT></B><FONT COLOR="#FF0000">

	return</FONT><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300">;
}</FONT></B><FONT COLOR="#FF6633">

void</FONT> SDL_PrintText<B><FONT COLOR="#663300">(</FONT></B>SDL_Surface<B><FONT COLOR="#663300"> *</FONT></B>front<B><FONT COLOR="#663300">,</FONT></B> SDL_Font<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B>Uint32 color<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000">const</FONT><FONT COLOR="#FF6633"> char</FONT><B><FONT COLOR="#663300"> *</FONT></B>str<B><FONT COLOR="#663300">, ...) {</FONT></B><FONT COLOR="#FF6633">

	int</FONT> prev_x<B><FONT COLOR="#663300"> =</FONT></B> x<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
	int</FONT> offset_x<B><FONT COLOR="#663300"> =</FONT></B> prev_x<B><FONT COLOR="#663300">,</FONT></B> offset_y<B><FONT COLOR="#663300"> =</FONT></B> y<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">

	int</FONT> width<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">,</FONT></B> height<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">

	char</FONT> text<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">5000</FONT><B><FONT COLOR="#663300">];</FONT></B><I><FONT COLOR="#999999">// just enough
</FONT></I>	va_list list<B><FONT COLOR="#663300">;</FONT></B>
	va_start<B><FONT COLOR="#663300">(</FONT></B>list<B><FONT COLOR="#663300">,</FONT></B> str<B><FONT COLOR="#663300">);</FONT></B>

	vsprintf<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)</FONT></B>text<B><FONT COLOR="#663300">,</FONT></B>str<B><FONT COLOR="#663300">,</FONT></B>list<B><FONT COLOR="#663300">);</FONT></B>
	va_end<B><FONT COLOR="#663300">(</FONT></B>list<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

	for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">unsigned int</FONT> p<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300"> &lt;</FONT></B> strlen<B><FONT COLOR="#663300">(</FONT></B>text<B><FONT COLOR="#663300">);</FONT></B> p<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">(</FONT></B>text<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">] ==</FONT></B><FONT COLOR="#009900"> '\n'</FONT><B><FONT COLOR="#663300">) {</FONT></B>
			offset_x<B><FONT COLOR="#663300">  =</FONT></B> prev_x<B><FONT COLOR="#663300">;</FONT></B>

			offset_y<B><FONT COLOR="#663300"> +=</FONT></B> height<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
			continue</FONT><B><FONT COLOR="#663300">;
		}</FONT></B><FONT COLOR="#FF0000">

		for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> z<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

				if</FONT><B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>text<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">]].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>i<B><FONT COLOR="#663300">][</FONT></B>z<B><FONT COLOR="#663300">] !=</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>tcolor<B><FONT COLOR="#663300">) {</FONT></B>

					SDL_SetPixel<B><FONT COLOR="#663300">(</FONT></B>front<B><FONT COLOR="#663300">,</FONT></B> offset_x<B><FONT COLOR="#663300">+</FONT></B>i<B><FONT COLOR="#663300">,</FONT></B> offset_y<B><FONT COLOR="#663300">+</FONT></B>z<B><FONT COLOR="#663300">,</FONT></B> color<B><FONT COLOR="#663300">);</FONT></B>

					width<B><FONT COLOR="#663300">=</FONT></B>i<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
					if</FONT><B><FONT COLOR="#663300">(</FONT></B>height<B><FONT COLOR="#663300"> &lt;</FONT></B> z<B><FONT COLOR="#663300">)</FONT></B>
						height<B><FONT COLOR="#663300">=</FONT></B>z<B><FONT COLOR="#663300">;
				}
			}       

		}</FONT></B>

		offset_x<B><FONT COLOR="#663300"> +=</FONT></B> width<B><FONT COLOR="#663300">;
	}
}</FONT></B><FONT COLOR="#FF6633">

void</FONT> SDL_PrintTextSized<B><FONT COLOR="#663300">(</FONT></B>SDL_Surface<B><FONT COLOR="#663300"> *</FONT></B>front<B><FONT COLOR="#663300">,</FONT></B> SDL_Font<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> w<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> h<B><FONT COLOR="#663300">,</FONT></B>Uint32 color<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> const</FONT><FONT COLOR="#FF6633"> char</FONT><B><FONT COLOR="#663300"> *</FONT></B>str<B><FONT COLOR="#663300">, ...) {</FONT></B><FONT COLOR="#FF6633">

	int</FONT> prev_x<B><FONT COLOR="#663300"> =</FONT></B> x<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
	int</FONT> offset_x<B><FONT COLOR="#663300"> =</FONT></B> prev_x<B><FONT COLOR="#663300">,</FONT></B> offset_y<B><FONT COLOR="#663300"> =</FONT></B> y<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">

	int</FONT> width<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">,</FONT></B> height<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">

	char</FONT> text<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">5000</FONT><B><FONT COLOR="#663300">];</FONT></B><I><FONT COLOR="#999999">// just enough
</FONT></I>	va_list list<B><FONT COLOR="#663300">;</FONT></B>
	va_start<B><FONT COLOR="#663300">(</FONT></B>list<B><FONT COLOR="#663300">,</FONT></B> str<B><FONT COLOR="#663300">);</FONT></B>

	vsprintf<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)</FONT></B>text<B><FONT COLOR="#663300">,</FONT></B>str<B><FONT COLOR="#663300">,</FONT></B>list<B><FONT COLOR="#663300">);</FONT></B>
	va_end<B><FONT COLOR="#663300">(</FONT></B>list<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

	for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">unsigned int</FONT> p<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300"> &lt;</FONT></B> strlen<B><FONT COLOR="#663300">(</FONT></B>text<B><FONT COLOR="#663300">);</FONT></B> p<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">(</FONT></B>text<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">] ==</FONT></B><FONT COLOR="#009900"> '\n'</FONT><B><FONT COLOR="#663300">) {</FONT></B>
			offset_x<B><FONT COLOR="#663300">  =</FONT></B> prev_x<B><FONT COLOR="#663300">;</FONT></B>

			offset_y<B><FONT COLOR="#663300"> +=</FONT></B> height<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
			continue</FONT><B><FONT COLOR="#663300">;
		}</FONT></B><FONT COLOR="#FF0000">

		for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> h<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> z<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300"> &lt;</FONT></B> w<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

				if</FONT><B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>text<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">]].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>SDL_GetFX<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B>i<B><FONT COLOR="#663300">,</FONT></B>w<B><FONT COLOR="#663300">)][</FONT></B>SDL_GetFZ<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B>z<B><FONT COLOR="#663300">,</FONT></B>h<B><FONT COLOR="#663300">)] !=</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>tcolor<B><FONT COLOR="#663300">) {</FONT></B>

					SDL_SetPixel<B><FONT COLOR="#663300">(</FONT></B>front<B><FONT COLOR="#663300">,</FONT></B> offset_x<B><FONT COLOR="#663300">+</FONT></B>i<B><FONT COLOR="#663300">,</FONT></B> offset_y<B><FONT COLOR="#663300">+</FONT></B>z<B><FONT COLOR="#663300">,</FONT></B> color<B><FONT COLOR="#663300">);</FONT></B>

					width<B><FONT COLOR="#663300">=</FONT></B>i<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
					if</FONT><B><FONT COLOR="#663300">(</FONT></B>height<B><FONT COLOR="#663300"> &lt;</FONT></B> z<B><FONT COLOR="#663300">)</FONT></B>
						height<B><FONT COLOR="#663300">=</FONT></B>z<B><FONT COLOR="#663300">;
				}
			}       
		}</FONT></B>

		offset_x<B><FONT COLOR="#663300"> +=</FONT></B> width<B><FONT COLOR="#663300">;
	}
}</FONT></B><FONT COLOR="#990000">

class</FONT> SDL_Text<B><FONT COLOR="#663300">  {</FONT></B><FONT COLOR="#990000">
public</FONT><B><FONT COLOR="#663300">:</FONT></B>

	SDL_Text<B><FONT COLOR="#663300">(</FONT></B>std<B><FONT COLOR="#663300">::</FONT></B>string fnt_name<B><FONT COLOR="#663300">) {</FONT></B>
		loaded<B><FONT COLOR="#663300"> =</FONT></B> LoadFNT<B><FONT COLOR="#663300">(</FONT></B>fnt_name<B><FONT COLOR="#663300">);
	}</FONT></B>

	SDL_Text<B><FONT COLOR="#663300">() {</FONT></B>
		loaded<B><FONT COLOR="#663300"> =</FONT></B><B><FONT COLOR="#000000"> false</FONT></B><B><FONT COLOR="#663300">;</FONT></B>
		SDL_zero<B><FONT COLOR="#663300">(&amp;</FONT></B>m<B><FONT COLOR="#663300">);
	}
	~</FONT></B>SDL_Text<B><FONT COLOR="#663300">() {</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">(</FONT></B>loaded<B><FONT COLOR="#663300"> ==</FONT></B><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300">) {</FONT></B>
			SDL_free_font<B><FONT COLOR="#663300">(&amp;</FONT></B>m<B><FONT COLOR="#663300">);
		}
	}</FONT></B><FONT COLOR="#FF6633">
	bool</FONT> LoadFNT<B><FONT COLOR="#663300">(</FONT></B>std<B><FONT COLOR="#663300">::</FONT></B>string fnt_name<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF0000">

		return</FONT><B><FONT COLOR="#663300"> (</FONT></B>loaded<B><FONT COLOR="#663300"> =</FONT></B> SDL_read_font<B><FONT COLOR="#663300">(&amp;</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B> fnt_name<B><FONT COLOR="#663300">.</FONT></B>c_str<B><FONT COLOR="#663300">()));
	}</FONT></B><FONT COLOR="#FF6633">

	void</FONT> FreeFNT<B><FONT COLOR="#663300">() {</FONT></B><FONT COLOR="#FF0000">
		if</FONT><B><FONT COLOR="#663300">(</FONT></B>loaded<B><FONT COLOR="#663300"> ==</FONT></B><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300">) {</FONT></B>

			SDL_free_font<B><FONT COLOR="#663300">(&amp;</FONT></B>m<B><FONT COLOR="#663300">);
		}
	}</FONT></B>

	SDL_Font<B><FONT COLOR="#663300"> *</FONT></B>GetFont<B><FONT COLOR="#663300">() {</FONT></B><FONT COLOR="#FF0000"> return</FONT><B><FONT COLOR="#663300"> &amp;</FONT></B>m<B><FONT COLOR="#663300">; }</FONT></B><FONT COLOR="#990000">

protected</FONT><B><FONT COLOR="#663300">:</FONT></B>
	SDL_Font m<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
	bool</FONT> loaded<B><FONT COLOR="#663300">;
};</FONT></B><FONT COLOR="#000099">

#endif</FONT></PRE>
</BODY>

</html>
