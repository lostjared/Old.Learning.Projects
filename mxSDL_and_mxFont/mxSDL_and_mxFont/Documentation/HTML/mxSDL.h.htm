<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>mxSDL.h</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset= Windows-1252">

</head>

<BODY BGCOLOR="#FFFFFF">
<PRE><FONT COLOR="#000099">#ifndef _MXSDL_H__
#define _MXSDL_H__
#include"mxSDL_msg.h"
#include"mxSDL_font.h"
#include&lt;SDL.h&gt;
</FONT><FONT COLOR="#990000">
class</FONT> mxSDL<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#990000">

class</FONT> mxSurface<B><FONT COLOR="#663300"> {</FONT></B><FONT COLOR="#990000">
public</FONT><B><FONT COLOR="#663300">:</FONT></B>
	SDL_Surface<B><FONT COLOR="#663300"> *</FONT></B>surf<B><FONT COLOR="#663300">;</FONT></B>

	SDL_PixelFormat<B><FONT COLOR="#663300"> *</FONT></B>Format<B><FONT COLOR="#663300">() {</FONT></B><FONT COLOR="#FF0000"> return</FONT> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>format<B><FONT COLOR="#663300">; }</FONT></B><FONT COLOR="#FF6633">
	bool</FONT> LoadBMP<B><FONT COLOR="#663300">(</FONT></B>std<B><FONT COLOR="#663300">::</FONT></B>string name<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">((</FONT></B>surf<B><FONT COLOR="#663300"> =</FONT></B> SDL_LoadBMP<B><FONT COLOR="#663300">(</FONT></B>name<B><FONT COLOR="#663300">.</FONT></B>c_str<B><FONT COLOR="#663300">())) ==</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">)</FONT></B><FONT COLOR="#FF0000">

			return</FONT><B><FONT COLOR="#000000"> false</FONT></B><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
		return</FONT><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300">;
	}</FONT></B>
	mxSurface<B><FONT COLOR="#663300">() {</FONT></B>
		surf<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;
	}

	~</FONT></B>mxSurface<B><FONT COLOR="#663300">() {</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">)</FONT></B>
			SDL_FreeSurface<B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">);
	}
};</FONT></B><FONT COLOR="#990000">

class</FONT> EventHandler<B><FONT COLOR="#663300"> {</FONT></B><FONT COLOR="#990000">

public</FONT><B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#990000">
	virtual</FONT><FONT COLOR="#FF6633"> void</FONT> Event<B><FONT COLOR="#663300">(</FONT></B>SDL_Event<B><FONT COLOR="#663300"> &amp;</FONT></B>e<B><FONT COLOR="#663300">){}</FONT></B><FONT COLOR="#990000">
	virtual</FONT><FONT COLOR="#FF6633"> void</FONT> KeyDown<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> key<B><FONT COLOR="#663300">){}</FONT></B><FONT COLOR="#990000">

	virtual</FONT><FONT COLOR="#FF6633"> void</FONT> KeyUp<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> key<B><FONT COLOR="#663300">) {}</FONT></B><FONT COLOR="#990000">
	virtual</FONT><FONT COLOR="#FF6633"> void</FONT> Render<B><FONT COLOR="#663300">() {}</FONT></B><FONT COLOR="#990000">

	virtual</FONT><FONT COLOR="#FF6633"> void</FONT> MouseMove<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">) {}</FONT></B><FONT COLOR="#990000">

	virtual</FONT><FONT COLOR="#FF6633"> void</FONT> MouseDown<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> button<B><FONT COLOR="#663300">) {}</FONT></B><FONT COLOR="#FF6633">

	void</FONT> Init<B><FONT COLOR="#663300">(</FONT></B>mxSDL<B><FONT COLOR="#663300"> *</FONT></B>mx<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#990000"> this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300"> =</FONT></B> mx<B><FONT COLOR="#663300">; }</FONT></B><FONT COLOR="#990000">

protected</FONT><B><FONT COLOR="#663300">:</FONT></B>
	mxSDL<B><FONT COLOR="#663300"> *</FONT></B>mx<B><FONT COLOR="#663300">;
};</FONT></B><FONT COLOR="#990000">



class</FONT> mxRGB<B><FONT COLOR="#663300"> {</FONT></B><FONT COLOR="#990000">

public</FONT><B><FONT COLOR="#663300">:</FONT></B>
	Uint8 r<B><FONT COLOR="#663300">,</FONT></B>g<B><FONT COLOR="#663300">,</FONT></B>b<B><FONT COLOR="#663300">;</FONT></B>
	Uint32 color<B><FONT COLOR="#663300">;</FONT></B>
	mxRGB<B><FONT COLOR="#663300">(</FONT></B>mxSurface<B><FONT COLOR="#663300"> *</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B> Uint8 r<B><FONT COLOR="#663300">,</FONT></B> Uint8 g<B><FONT COLOR="#663300">,</FONT></B> Uint8 b<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#990000">

		this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>r<B><FONT COLOR="#663300"> =</FONT></B> r<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>g<B><FONT COLOR="#663300"> =</FONT></B> g<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>b<B><FONT COLOR="#663300"> =</FONT></B> b<B><FONT COLOR="#663300">;</FONT></B>

		color<B><FONT COLOR="#663300"> =</FONT></B> SDL_MapRGB<B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>Format<B><FONT COLOR="#663300">(),</FONT></B> r<B><FONT COLOR="#663300">,</FONT></B>g<B><FONT COLOR="#663300">,</FONT></B>b<B><FONT COLOR="#663300">);
	}</FONT></B>

	mxRGB<B><FONT COLOR="#663300">(</FONT></B>Uint32 color<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#990000">
		this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>color<B><FONT COLOR="#663300"> =</FONT></B> color<B><FONT COLOR="#663300">;</FONT></B>
		r<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">)</FONT></B> color<B><FONT COLOR="#663300">;</FONT></B>

		g<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">)(</FONT></B> color<B><FONT COLOR="#663300"> &gt;&gt;</FONT></B><FONT COLOR="#999900"> 8</FONT><B><FONT COLOR="#663300"> );</FONT></B>
		b<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">)(</FONT></B> color<B><FONT COLOR="#663300"> &gt;&gt;</FONT></B><FONT COLOR="#999900"> 16</FONT><B><FONT COLOR="#663300"> );
	}</FONT></B>

	Uint32 GetColor<B><FONT COLOR="#663300">() {</FONT></B><FONT COLOR="#FF0000"> return</FONT> color<B><FONT COLOR="#663300">; }</FONT></B>

	Uint32 SetColor<B><FONT COLOR="#663300">(</FONT></B>mxSurface<B><FONT COLOR="#663300"> *</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B> Uint8 r<B><FONT COLOR="#663300">,</FONT></B> Uint8 g<B><FONT COLOR="#663300">,</FONT></B> Uint8 b<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#990000">

		this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>r<B><FONT COLOR="#663300"> =</FONT></B> r<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>g<B><FONT COLOR="#663300"> =</FONT></B> g<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>b<B><FONT COLOR="#663300"> =</FONT></B> b<B><FONT COLOR="#663300">;</FONT></B>

		color<B><FONT COLOR="#663300"> =</FONT></B> SDL_MapRGB<B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>Format<B><FONT COLOR="#663300">(),</FONT></B> r<B><FONT COLOR="#663300">,</FONT></B>g<B><FONT COLOR="#663300">,</FONT></B>b<B><FONT COLOR="#663300">);
	}
};</FONT></B><FONT COLOR="#990000">

class</FONT> mxSDL<B><FONT COLOR="#663300"> {</FONT></B><FONT COLOR="#990000">
public</FONT><B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#FF6633">
	bool</FONT> active<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
	int</FONT> w<B><FONT COLOR="#663300">,</FONT></B>h<B><FONT COLOR="#663300">;</FONT></B>

	Message sys_msg<B><FONT COLOR="#663300">;</FONT></B>

	mxSDL<B><FONT COLOR="#663300">(</FONT></B>std<B><FONT COLOR="#663300">::</FONT></B>string name<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> bpp<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> bool</FONT> full<B><FONT COLOR="#663300">) {</FONT></B>

		eventz<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B>
		Init<B><FONT COLOR="#663300">(</FONT></B>name<B><FONT COLOR="#663300">,</FONT></B> x<B><FONT COLOR="#663300">,</FONT></B> y<B><FONT COLOR="#663300">,</FONT></B> bpp<B><FONT COLOR="#663300">,</FONT></B> full<B><FONT COLOR="#663300">);
	}

	~</FONT></B>mxSDL<B><FONT COLOR="#663300">() {</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">(</FONT></B>eventz<B><FONT COLOR="#663300">)</FONT></B><FONT COLOR="#990000">
			delete</FONT> eventz<B><FONT COLOR="#663300">;
	}</FONT></B><FONT COLOR="#990000">

	virtual</FONT><FONT COLOR="#FF6633"> void</FONT> Init<B><FONT COLOR="#663300">(</FONT></B>std<B><FONT COLOR="#663300">::</FONT></B>string name<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> bpp<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> bool</FONT> full<B><FONT COLOR="#663300">) {</FONT></B>

		atexit<B><FONT COLOR="#663300">(</FONT></B>SDL_Quit<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">
		if</FONT><B><FONT COLOR="#663300">(</FONT></B>SDL_Init<B><FONT COLOR="#663300">(</FONT></B>SDL_INIT_VIDEO<B><FONT COLOR="#663300">) &lt;</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">)</FONT></B><FONT COLOR="#FF0000">

			throw</FONT> ErrorMsg<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#009900">"Error Couldnt Initalize SDL!\n"</FONT><B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">
		if</FONT><B><FONT COLOR="#663300">((</FONT></B>front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300"> =</FONT></B> SDL_SetVideoMode<B><FONT COLOR="#663300">(</FONT></B>x<B><FONT COLOR="#663300">,</FONT></B>y<B><FONT COLOR="#663300">,</FONT></B>bpp<B><FONT COLOR="#663300">,</FONT></B>full<B><FONT COLOR="#663300"> ==</FONT></B><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300"> ?</FONT></B> SDL_FULLSCREEN<B><FONT COLOR="#663300"> :</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">)) ==</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">)</FONT></B><FONT COLOR="#FF0000">

			throw</FONT> ErrorMsg<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#009900">"Couldnt Set Display Mode!\n"</FONT><B><FONT COLOR="#663300">);</FONT></B>
		SDL_WM_SetCaption<B><FONT COLOR="#663300">(</FONT></B>name<B><FONT COLOR="#663300">.</FONT></B>c_str<B><FONT COLOR="#663300">(),</FONT></B>name<B><FONT COLOR="#663300">.</FONT></B>c_str<B><FONT COLOR="#663300">());</FONT></B>

		w<B><FONT COLOR="#663300"> =</FONT></B> x<B><FONT COLOR="#663300">,</FONT></B> h<B><FONT COLOR="#663300"> =</FONT></B> y<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#000099">
#ifdef MXDEBUG_MODE
</FONT>		sys_msg<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#009900"> "mxSDL System Message"</FONT><B><FONT COLOR="#663300">;</FONT></B>

		sys_msg<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> "SDL Successfully Initalized\n"</FONT><B><FONT COLOR="#663300">;</FONT></B>
		sys_msg<B><FONT COLOR="#663300">.</FONT></B>DebugMessage<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#000099">
#endif
</FONT><B><FONT COLOR="#663300">	}</FONT></B><FONT COLOR="#FF6633">

	void</FONT> SetEvents<B><FONT COLOR="#663300">(</FONT></B>EventHandler<B><FONT COLOR="#663300"> *</FONT></B>event<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#990000">
		this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>eventz<B><FONT COLOR="#663300"> =</FONT></B> event<B><FONT COLOR="#663300">;
	}</FONT></B><FONT COLOR="#FF6633">

	void</FONT> PrintText<B><FONT COLOR="#663300">(</FONT></B>mxFont<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B>mxRGB color<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000">const</FONT><FONT COLOR="#FF6633"> char</FONT><B><FONT COLOR="#663300"> *</FONT></B>str<B><FONT COLOR="#663300">, ...) {</FONT></B><FONT COLOR="#FF6633">

	    int</FONT> prev_x<B><FONT COLOR="#663300"> =</FONT></B> x<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
		int</FONT> offset_x<B><FONT COLOR="#663300"> =</FONT></B> prev_x<B><FONT COLOR="#663300">,</FONT></B> offset_y<B><FONT COLOR="#663300"> =</FONT></B> y<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">

		int</FONT> width<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">,</FONT></B> height<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">

		char</FONT> text<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">5000</FONT><B><FONT COLOR="#663300">];</FONT></B><I><FONT COLOR="#999999">// just enough
</FONT></I>		va_list list<B><FONT COLOR="#663300">;</FONT></B>
		va_start<B><FONT COLOR="#663300">(</FONT></B>list<B><FONT COLOR="#663300">,</FONT></B> str<B><FONT COLOR="#663300">);</FONT></B>

		vsprintf<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)</FONT></B>text<B><FONT COLOR="#663300">,</FONT></B>str<B><FONT COLOR="#663300">,</FONT></B>list<B><FONT COLOR="#663300">);</FONT></B>
		va_end<B><FONT COLOR="#663300">(</FONT></B>list<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

		for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">unsigned int</FONT> p<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300"> &lt;</FONT></B> strlen<B><FONT COLOR="#663300">(</FONT></B>text<B><FONT COLOR="#663300">);</FONT></B> p<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

			if</FONT><B><FONT COLOR="#663300">(</FONT></B>text<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">] ==</FONT></B><FONT COLOR="#009900"> '\n'</FONT><B><FONT COLOR="#663300">) {</FONT></B>
				offset_x<B><FONT COLOR="#663300">  =</FONT></B> prev_x<B><FONT COLOR="#663300">;</FONT></B>

				offset_y<B><FONT COLOR="#663300"> +=</FONT></B> height<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
				continue</FONT><B><FONT COLOR="#663300">;
			}</FONT></B><FONT COLOR="#FF0000">

			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

				for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> z<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

					if</FONT><B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>text<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">]].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>i<B><FONT COLOR="#663300">][</FONT></B>z<B><FONT COLOR="#663300">] !=</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>tcolor<B><FONT COLOR="#663300">) {</FONT></B>

						SetPixel<B><FONT COLOR="#663300">(&amp;</FONT></B>front<B><FONT COLOR="#663300">,</FONT></B> offset_x<B><FONT COLOR="#663300">+</FONT></B>i<B><FONT COLOR="#663300">,</FONT></B> offset_y<B><FONT COLOR="#663300">+</FONT></B>z<B><FONT COLOR="#663300">,</FONT></B> color<B><FONT COLOR="#663300">);</FONT></B>

						width<B><FONT COLOR="#663300">=</FONT></B>i<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
						if</FONT><B><FONT COLOR="#663300">(</FONT></B>height<B><FONT COLOR="#663300"> &lt;</FONT></B> z<B><FONT COLOR="#663300">)</FONT></B>
							height<B><FONT COLOR="#663300">=</FONT></B>z<B><FONT COLOR="#663300">;
					}
				}       

			}</FONT></B>

			offset_x<B><FONT COLOR="#663300"> +=</FONT></B> width<B><FONT COLOR="#663300">;
		}
	}</FONT></B><FONT COLOR="#FF6633">

	void</FONT> PrintTextSized<B><FONT COLOR="#663300">(</FONT></B>mxFont<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> w<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> h<B><FONT COLOR="#663300">,</FONT></B>mxRGB color<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> const</FONT><FONT COLOR="#FF6633"> char</FONT><B><FONT COLOR="#663300"> *</FONT></B>str<B><FONT COLOR="#663300">, ...) {</FONT></B><FONT COLOR="#FF6633">

		int</FONT> prev_x<B><FONT COLOR="#663300"> =</FONT></B> x<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
		int</FONT> offset_x<B><FONT COLOR="#663300"> =</FONT></B> prev_x<B><FONT COLOR="#663300">,</FONT></B> offset_y<B><FONT COLOR="#663300"> =</FONT></B> y<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">

		int</FONT> width<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">,</FONT></B> height<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">

		char</FONT> text<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">5000</FONT><B><FONT COLOR="#663300">];</FONT></B><I><FONT COLOR="#999999">// just enough
</FONT></I>		va_list list<B><FONT COLOR="#663300">;</FONT></B>
		va_start<B><FONT COLOR="#663300">(</FONT></B>list<B><FONT COLOR="#663300">,</FONT></B> str<B><FONT COLOR="#663300">);</FONT></B>

		vsprintf<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)</FONT></B>text<B><FONT COLOR="#663300">,</FONT></B>str<B><FONT COLOR="#663300">,</FONT></B>list<B><FONT COLOR="#663300">);</FONT></B>
		va_end<B><FONT COLOR="#663300">(</FONT></B>list<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

		for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">unsigned int</FONT> p<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300"> &lt;</FONT></B> strlen<B><FONT COLOR="#663300">(</FONT></B>text<B><FONT COLOR="#663300">);</FONT></B> p<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

			if</FONT><B><FONT COLOR="#663300">(</FONT></B>text<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">] ==</FONT></B><FONT COLOR="#009900"> '\n'</FONT><B><FONT COLOR="#663300">) {</FONT></B>
				offset_x<B><FONT COLOR="#663300">  =</FONT></B> prev_x<B><FONT COLOR="#663300">;</FONT></B>

				offset_y<B><FONT COLOR="#663300"> +=</FONT></B> height<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
				continue</FONT><B><FONT COLOR="#663300">;
			}</FONT></B><FONT COLOR="#FF0000">

			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> h<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

				for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> z<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300"> &lt;</FONT></B> w<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

					if</FONT><B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>text<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">]].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>GetFX<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B>i<B><FONT COLOR="#663300">,</FONT></B>w<B><FONT COLOR="#663300">)][</FONT></B>GetFZ<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B>z<B><FONT COLOR="#663300">,</FONT></B>h<B><FONT COLOR="#663300">)] !=</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>tcolor<B><FONT COLOR="#663300">) {</FONT></B>

						SetPixel<B><FONT COLOR="#663300">(&amp;</FONT></B>front<B><FONT COLOR="#663300">,</FONT></B> offset_x<B><FONT COLOR="#663300">+</FONT></B>i<B><FONT COLOR="#663300">,</FONT></B> offset_y<B><FONT COLOR="#663300">+</FONT></B>z<B><FONT COLOR="#663300">,</FONT></B> color<B><FONT COLOR="#663300">);</FONT></B>

						width<B><FONT COLOR="#663300">=</FONT></B>i<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
						if</FONT><B><FONT COLOR="#663300">(</FONT></B>height<B><FONT COLOR="#663300"> &lt;</FONT></B> z<B><FONT COLOR="#663300">)</FONT></B>
							height<B><FONT COLOR="#663300">=</FONT></B>z<B><FONT COLOR="#663300">;
					}
				}       
			}</FONT></B>

			offset_x<B><FONT COLOR="#663300"> +=</FONT></B> width<B><FONT COLOR="#663300">;
		}
	}</FONT></B><FONT COLOR="#990000">

	inline</FONT><FONT COLOR="#FF6633"> int</FONT> GetFX<B><FONT COLOR="#663300">(</FONT></B>mxFont<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633">int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> nw<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF6633">

		int</FONT> xp<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">float</FONT><B><FONT COLOR="#663300">)</FONT></B>x<B><FONT COLOR="#663300"> *</FONT></B><FONT COLOR="#FF6633"> float</FONT><B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">) / (</FONT></B><FONT COLOR="#FF6633">float</FONT><B><FONT COLOR="#663300">)</FONT></B>nw<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">		
		return</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">(</FONT></B>xp<B><FONT COLOR="#663300">);
	}</FONT></B><FONT COLOR="#990000">

	inline</FONT><FONT COLOR="#FF6633"> int</FONT> GetFZ<B><FONT COLOR="#663300">(</FONT></B>mxFont<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> nh<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF6633">

		int</FONT> yp<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">float</FONT><B><FONT COLOR="#663300">)</FONT></B>y<B><FONT COLOR="#663300"> *</FONT></B><FONT COLOR="#FF6633"> float</FONT><B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300">) / (</FONT></B><FONT COLOR="#FF6633">float</FONT><B><FONT COLOR="#663300">)</FONT></B>nh<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">			
		return</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">(</FONT></B>yp<B><FONT COLOR="#663300">);
	}</FONT></B><FONT COLOR="#990000">

	virtual</FONT><FONT COLOR="#FF6633"> void</FONT> MessagePump<B><FONT COLOR="#663300">() {</FONT></B>
		SDL_Event e<B><FONT COLOR="#663300">;</FONT></B>
		active<B><FONT COLOR="#663300"> =</FONT></B><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300">;</FONT></B>

		eventz<B><FONT COLOR="#663300">-&gt;</FONT></B>Init<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#990000">this</FONT><B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">
		while</FONT><B><FONT COLOR="#663300">(</FONT></B>active<B><FONT COLOR="#663300"> ==</FONT></B><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#990000">

			static</FONT> SDL_Rect rc<B><FONT COLOR="#663300"> = {</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">0</FONT><B><FONT COLOR="#663300">,</FONT></B>w<B><FONT COLOR="#663300">,</FONT></B>h<B><FONT COLOR="#663300"> };</FONT></B>

			SDL_FillRect<B><FONT COLOR="#663300">(</FONT></B>front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">, &amp;</FONT></B>rc<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900"> 0x0</FONT><B><FONT COLOR="#663300">);</FONT></B>
			eventz<B><FONT COLOR="#663300">-&gt;</FONT></B>Render<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#FF0000">

			while</FONT><B><FONT COLOR="#663300">(</FONT></B>SDL_PollEvent<B><FONT COLOR="#663300">(&amp;</FONT></B>e<B><FONT COLOR="#663300">)) {</FONT></B>
				eventz<B><FONT COLOR="#663300">-&gt;</FONT></B>Event<B><FONT COLOR="#663300">(</FONT></B>e<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#000099">
#ifdef MXDEBUG_MODE

</FONT>				sys_msg<B><FONT COLOR="#663300">.</FONT></B>clear<B><FONT COLOR="#663300">();</FONT></B>
				sys_msg<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> " SDL Message: "</FONT><B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">(</FONT></B>e<B><FONT COLOR="#663300">.</FONT></B>type<B><FONT COLOR="#663300">) &lt;&lt;</FONT></B><FONT COLOR="#009900"> "\n"</FONT><B><FONT COLOR="#663300">;</FONT></B>

				sys_msg<B><FONT COLOR="#663300">.</FONT></B>DebugMessage<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#000099">
#endif
</FONT><FONT COLOR="#FF0000">				switch</FONT><B><FONT COLOR="#663300">(</FONT></B>e<B><FONT COLOR="#663300">.</FONT></B>type<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF0000">
					case</FONT> SDL_QUIT<B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#000099">

#ifdef MXDEBUG_MODE
</FONT>						sys_msg<B><FONT COLOR="#663300">.</FONT></B>clear<B><FONT COLOR="#663300">();</FONT></B>
						sys_msg<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> " SDL Quit Message Sent \n"</FONT><B><FONT COLOR="#663300">;</FONT></B>
						sys_msg<B><FONT COLOR="#663300">.</FONT></B>DebugMessage<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#000099">

#endif
</FONT>						active<B><FONT COLOR="#663300"> =</FONT></B><B><FONT COLOR="#000000"> false</FONT></B><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
						break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
					case</FONT> SDL_KEYDOWN<B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#000099">

#ifdef MXDEBUG_MODE
</FONT>						sys_msg<B><FONT COLOR="#663300">.</FONT></B>clear<B><FONT COLOR="#663300">();</FONT></B>
						sys_msg<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> " SDL Keydown Message Sent Key Sym ("</FONT><B><FONT COLOR="#663300"> &lt;&lt;</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>key<B><FONT COLOR="#663300">.</FONT></B>keysym<B><FONT COLOR="#663300">.</FONT></B>sym<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> ") \n"</FONT><B><FONT COLOR="#663300">;</FONT></B>

						sys_msg<B><FONT COLOR="#663300">.</FONT></B>DebugMessage<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#000099">
#endif
</FONT>						eventz<B><FONT COLOR="#663300">-&gt;</FONT></B>KeyDown<B><FONT COLOR="#663300">(</FONT></B>e<B><FONT COLOR="#663300">.</FONT></B>key<B><FONT COLOR="#663300">.</FONT></B>keysym<B><FONT COLOR="#663300">.</FONT></B>sym<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

						break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
					case</FONT> SDL_KEYUP<B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#000099">
#ifdef MXDEBUG_MODE
</FONT>						sys_msg<B><FONT COLOR="#663300">.</FONT></B>clear<B><FONT COLOR="#663300">();</FONT></B>

						sys_msg<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> " SDL Keyup Message Sent Key Sym ("</FONT><B><FONT COLOR="#663300"> &lt;&lt;</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>key<B><FONT COLOR="#663300">.</FONT></B>keysym<B><FONT COLOR="#663300">.</FONT></B>sym<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> ") \n"</FONT><B><FONT COLOR="#663300">;</FONT></B>

						sys_msg<B><FONT COLOR="#663300">.</FONT></B>DebugMessage<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#000099">
#endif
</FONT>						eventz<B><FONT COLOR="#663300">-&gt;</FONT></B>KeyUp<B><FONT COLOR="#663300">(</FONT></B>e<B><FONT COLOR="#663300">.</FONT></B>key<B><FONT COLOR="#663300">.</FONT></B>keysym<B><FONT COLOR="#663300">.</FONT></B>sym<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

						break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
					case</FONT> SDL_MOUSEMOTION<B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#000099">
#ifdef MXDEBUG_MODE
</FONT>						sys_msg<B><FONT COLOR="#663300">.</FONT></B>clear<B><FONT COLOR="#663300">();</FONT></B>

						sys_msg<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> " SDL Mouse Move Message Sent X , Y cords ( "</FONT><B><FONT COLOR="#663300"> &lt;&lt;</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>motion<B><FONT COLOR="#663300">.</FONT></B>x<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> " , "</FONT><B><FONT COLOR="#663300"> &lt;&lt;</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>motion<B><FONT COLOR="#663300">.</FONT></B>y<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> " )\n"</FONT><B><FONT COLOR="#663300">;</FONT></B>

						sys_msg<B><FONT COLOR="#663300">.</FONT></B>DebugMessage<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#000099">
#endif
</FONT>						mouse_x<B><FONT COLOR="#663300"> =</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>motion<B><FONT COLOR="#663300">.</FONT></B>x<B><FONT COLOR="#663300">;</FONT></B>

						mouse_y<B><FONT COLOR="#663300"> =</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>motion<B><FONT COLOR="#663300">.</FONT></B>y<B><FONT COLOR="#663300">;</FONT></B>
						eventz<B><FONT COLOR="#663300">-&gt;</FONT></B>MouseMove<B><FONT COLOR="#663300">(</FONT></B>mouse_x<B><FONT COLOR="#663300">,</FONT></B> mouse_y<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

						break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
					case</FONT> SDL_MOUSEBUTTONDOWN<B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#000099">
#ifdef MXDEBUG_MODE
</FONT>						sys_msg<B><FONT COLOR="#663300">.</FONT></B>clear<B><FONT COLOR="#663300">();</FONT></B>

						sys_msg<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> " SDL Mouse Down Message Sent X , Y , Button ("</FONT><B><FONT COLOR="#663300">  &lt;&lt;</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>button<B><FONT COLOR="#663300">.</FONT></B>x<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> " , "</FONT><B><FONT COLOR="#663300"> &lt;&lt;</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>button<B><FONT COLOR="#663300">.</FONT></B>y<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> " := "</FONT><B><FONT COLOR="#663300"> &lt;&lt;</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>button<B><FONT COLOR="#663300">.</FONT></B>button<B><FONT COLOR="#663300"> &lt;&lt;</FONT></B><FONT COLOR="#009900"> ")\n"</FONT><B><FONT COLOR="#663300">;</FONT></B>

						sys_msg<B><FONT COLOR="#663300">.</FONT></B>DebugMessage<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#000099">
#endif
</FONT>						mouse_x<B><FONT COLOR="#663300"> =</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>button<B><FONT COLOR="#663300">.</FONT></B>x<B><FONT COLOR="#663300">;</FONT></B>

						mouse_y<B><FONT COLOR="#663300"> =</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>button<B><FONT COLOR="#663300">.</FONT></B>y<B><FONT COLOR="#663300">;</FONT></B>
						mouse_b<B><FONT COLOR="#663300"> =</FONT></B> e<B><FONT COLOR="#663300">.</FONT></B>button<B><FONT COLOR="#663300">.</FONT></B>button<B><FONT COLOR="#663300">;</FONT></B>

						eventz<B><FONT COLOR="#663300">-&gt;</FONT></B>MouseDown<B><FONT COLOR="#663300">(</FONT></B>mouse_x<B><FONT COLOR="#663300">,</FONT></B>mouse_y<B><FONT COLOR="#663300">,</FONT></B>mouse_b<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">
						break</FONT><B><FONT COLOR="#663300">;
				
				}
			}</FONT></B>
			SDL_UpdateRect<B><FONT COLOR="#663300">(</FONT></B>front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">0</FONT><B><FONT COLOR="#663300">,</FONT></B>w<B><FONT COLOR="#663300">,</FONT></B>h<B><FONT COLOR="#663300">);
		}
	}</FONT></B><FONT COLOR="#FF6633">

	void</FONT> SetPixel<B><FONT COLOR="#663300">(</FONT></B>mxSurface<B><FONT COLOR="#663300"> *</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B> mxRGB the_color<B><FONT COLOR="#663300">) {</FONT></B>

		Uint8<B><FONT COLOR="#663300"> *</FONT></B>ubuff8<B><FONT COLOR="#663300">;</FONT></B>
		Uint16<B><FONT COLOR="#663300"> *</FONT></B>ubuff16<B><FONT COLOR="#663300">;</FONT></B>
		Uint32<B><FONT COLOR="#663300"> *</FONT></B>ubuff32<B><FONT COLOR="#663300">;</FONT></B>

		Uint32 color<B><FONT COLOR="#663300"> =</FONT></B> the_color<B><FONT COLOR="#663300">.</FONT></B>GetColor<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#FF6633">
		char</FONT> c1<B><FONT COLOR="#663300">,</FONT></B> c2<B><FONT COLOR="#663300">,</FONT></B> c3<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">(</FONT></B>SDL_MUSTLOCK<B><FONT COLOR="#663300">(</FONT></B>front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">)) {</FONT></B><FONT COLOR="#FF0000">
			if</FONT><B><FONT COLOR="#663300">(</FONT></B>SDL_LockSurface<B><FONT COLOR="#663300">(</FONT></B>front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">) &lt;</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">)</FONT></B><FONT COLOR="#FF0000">

				return</FONT><B><FONT COLOR="#663300">;
		}</FONT></B><FONT COLOR="#FF0000">

		switch</FONT><B><FONT COLOR="#663300">(</FONT></B>front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>format<B><FONT COLOR="#663300">-&gt;</FONT></B>BytesPerPixel<B><FONT COLOR="#663300">)
		{</FONT></B><FONT COLOR="#FF0000">

		case</FONT><FONT COLOR="#999900"> 1</FONT><B><FONT COLOR="#663300">:</FONT></B>
			ubuff8<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">*)</FONT></B> front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300">;</FONT></B>

			ubuff8<B><FONT COLOR="#663300"> += (</FONT></B>y<B><FONT COLOR="#663300"> *</FONT></B> front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300">) +</FONT></B> x<B><FONT COLOR="#663300">;
			*</FONT></B>ubuff8<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">)</FONT></B> color<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

			break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

		case</FONT><FONT COLOR="#999900"> 2</FONT><B><FONT COLOR="#663300">:</FONT></B>
			ubuff8<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">*)</FONT></B> front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300">;</FONT></B>

			ubuff8<B><FONT COLOR="#663300"> += (</FONT></B>y<B><FONT COLOR="#663300"> *</FONT></B> front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300">) + (</FONT></B>x<B><FONT COLOR="#663300">*</FONT></B><FONT COLOR="#999900">2</FONT><B><FONT COLOR="#663300">);</FONT></B>

			ubuff16<B><FONT COLOR="#663300"> = (</FONT></B>Uint16<B><FONT COLOR="#663300">*)</FONT></B> ubuff8<B><FONT COLOR="#663300">;
			*</FONT></B>ubuff16<B><FONT COLOR="#663300"> = (</FONT></B>Uint16<B><FONT COLOR="#663300">)</FONT></B> color<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

			break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

		case</FONT><FONT COLOR="#999900"> 3</FONT><B><FONT COLOR="#663300">:</FONT></B>
			ubuff8<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">*)</FONT></B> front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300">;</FONT></B>

			ubuff8<B><FONT COLOR="#663300"> += (</FONT></B>y<B><FONT COLOR="#663300"> *</FONT></B> front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300">) + (</FONT></B>x<B><FONT COLOR="#663300">*</FONT></B><FONT COLOR="#999900">3</FONT><B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

			if</FONT><B><FONT COLOR="#663300">(</FONT></B>SDL_BYTEORDER<B><FONT COLOR="#663300"> ==</FONT></B> SDL_LIL_ENDIAN<B><FONT COLOR="#663300">) {</FONT></B>
				c1<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0xFF0000</FONT><B><FONT COLOR="#663300">) &gt;&gt;</FONT></B><FONT COLOR="#999900"> 16</FONT><B><FONT COLOR="#663300">;</FONT></B>

				c2<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0x00FF00</FONT><B><FONT COLOR="#663300">) &gt;&gt;</FONT></B><FONT COLOR="#999900"> 8</FONT><B><FONT COLOR="#663300">;</FONT></B>
				c3<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0x0000FF</FONT><B><FONT COLOR="#663300">);
			}</FONT></B><FONT COLOR="#FF0000"> else</FONT><B><FONT COLOR="#663300"> {</FONT></B>

				c3<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0xFF0000</FONT><B><FONT COLOR="#663300">) &gt;&gt;</FONT></B><FONT COLOR="#999900"> 16</FONT><B><FONT COLOR="#663300">;</FONT></B>
				c2<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0x00FF00</FONT><B><FONT COLOR="#663300">) &gt;&gt;</FONT></B><FONT COLOR="#999900"> 8</FONT><B><FONT COLOR="#663300">;</FONT></B>

				c1<B><FONT COLOR="#663300"> = (</FONT></B>color<B><FONT COLOR="#663300"> &amp;</FONT></B><FONT COLOR="#999900"> 0x0000FF</FONT><B><FONT COLOR="#663300">);
			}</FONT></B>
			ubuff8<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">0</FONT><B><FONT COLOR="#663300">] =</FONT></B> c3<B><FONT COLOR="#663300">;</FONT></B>

			ubuff8<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">1</FONT><B><FONT COLOR="#663300">] =</FONT></B> c2<B><FONT COLOR="#663300">;</FONT></B>
			ubuff8<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">2</FONT><B><FONT COLOR="#663300">] =</FONT></B> c1<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

			break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
		case</FONT><FONT COLOR="#999900"> 4</FONT><B><FONT COLOR="#663300">:</FONT></B>
			ubuff8<B><FONT COLOR="#663300"> = (</FONT></B>Uint8<B><FONT COLOR="#663300">*)</FONT></B> front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300">;</FONT></B>

			ubuff8<B><FONT COLOR="#663300"> += (</FONT></B>y<B><FONT COLOR="#663300">*</FONT></B>front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300">) + (</FONT></B>x<B><FONT COLOR="#663300">*</FONT></B><FONT COLOR="#999900">4</FONT><B><FONT COLOR="#663300">);</FONT></B>

			ubuff32<B><FONT COLOR="#663300"> = (</FONT></B>Uint32<B><FONT COLOR="#663300">*)</FONT></B>ubuff8<B><FONT COLOR="#663300">;
			*</FONT></B>ubuff32<B><FONT COLOR="#663300"> =</FONT></B> color<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
			break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

		default</FONT><B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#FF0000">
			throw</FONT> ErrorMsg<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#009900">"Unknown BitDepth"</FONT><B><FONT COLOR="#663300">);
		}</FONT></B><FONT COLOR="#FF0000">
		if</FONT><B><FONT COLOR="#663300">(</FONT></B>SDL_MUSTLOCK<B><FONT COLOR="#663300">(</FONT></B>front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">)) {</FONT></B>

			SDL_UnlockSurface<B><FONT COLOR="#663300">(</FONT></B>front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">);
		}
	}</FONT></B>

	mxRGB GetPixel<B><FONT COLOR="#663300">(</FONT></B>mxSurface<B><FONT COLOR="#663300"> *</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> X<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> Y<B><FONT COLOR="#663300">) {</FONT></B>

		Uint8<B><FONT COLOR="#663300">  *</FONT></B>bits<B><FONT COLOR="#663300">;</FONT></B>
		Uint32 Bpp<B><FONT COLOR="#663300">;</FONT></B>
		Bpp<B><FONT COLOR="#663300"> =</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>format<B><FONT COLOR="#663300">-&gt;</FONT></B>BytesPerPixel<B><FONT COLOR="#663300">;</FONT></B>

		bits<B><FONT COLOR="#663300"> = ((</FONT></B>Uint8<B><FONT COLOR="#663300"> *)</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300">)+</FONT></B>Y<B><FONT COLOR="#663300">*</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300">+</FONT></B>X<B><FONT COLOR="#663300">*</FONT></B>Bpp<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

		switch</FONT><B><FONT COLOR="#663300">(</FONT></B>Bpp<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF0000">
		case</FONT><FONT COLOR="#999900"> 1</FONT><B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#FF0000">
			return</FONT> mxRGB<B><FONT COLOR="#663300">(*((</FONT></B>Uint8<B><FONT COLOR="#663300"> *)</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300"> +</FONT></B> Y<B><FONT COLOR="#663300"> *</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300"> +</FONT></B> X<B><FONT COLOR="#663300">));</FONT></B><FONT COLOR="#FF0000">

			break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
		case</FONT><FONT COLOR="#999900"> 2</FONT><B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#FF0000">
			return</FONT> mxRGB<B><FONT COLOR="#663300">(*((</FONT></B>Uint16<B><FONT COLOR="#663300"> *)</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300"> +</FONT></B> Y<B><FONT COLOR="#663300"> *</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300">/</FONT></B><FONT COLOR="#999900">2</FONT><B><FONT COLOR="#663300"> +</FONT></B> X<B><FONT COLOR="#663300">));</FONT></B><FONT COLOR="#FF0000">

			break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">
		case</FONT><FONT COLOR="#999900"> 3</FONT><B><FONT COLOR="#663300">: {</FONT></B>
			Uint8 r<B><FONT COLOR="#663300">,</FONT></B> g<B><FONT COLOR="#663300">,</FONT></B> b<B><FONT COLOR="#663300">;</FONT></B>

			r<B><FONT COLOR="#663300"> = *((</FONT></B>bits<B><FONT COLOR="#663300">)+</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>format<B><FONT COLOR="#663300">-&gt;</FONT></B>Rshift<B><FONT COLOR="#663300">/</FONT></B><FONT COLOR="#999900">8</FONT><B><FONT COLOR="#663300">);</FONT></B>

			g<B><FONT COLOR="#663300"> = *((</FONT></B>bits<B><FONT COLOR="#663300">)+</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>format<B><FONT COLOR="#663300">-&gt;</FONT></B>Gshift<B><FONT COLOR="#663300">/</FONT></B><FONT COLOR="#999900">8</FONT><B><FONT COLOR="#663300">);</FONT></B>

			b<B><FONT COLOR="#663300"> = *((</FONT></B>bits<B><FONT COLOR="#663300">)+</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>format<B><FONT COLOR="#663300">-&gt;</FONT></B>Bshift<B><FONT COLOR="#663300">/</FONT></B><FONT COLOR="#999900">8</FONT><B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

			return</FONT> mxRGB<B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B> r<B><FONT COLOR="#663300">,</FONT></B>g<B><FONT COLOR="#663300">,</FONT></B>b<B><FONT COLOR="#663300">);
				}</FONT></B><FONT COLOR="#FF0000">
				break</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

		case</FONT><FONT COLOR="#999900"> 4</FONT><B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#FF0000">
			return</FONT> mxRGB<B><FONT COLOR="#663300">(*((</FONT></B>Uint32<B><FONT COLOR="#663300"> *)</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pixels<B><FONT COLOR="#663300"> +</FONT></B> Y<B><FONT COLOR="#663300"> *</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>pitch<B><FONT COLOR="#663300">/</FONT></B><FONT COLOR="#999900">4</FONT><B><FONT COLOR="#663300"> +</FONT></B> X<B><FONT COLOR="#663300">));</FONT></B><FONT COLOR="#FF0000">

			break</FONT><B><FONT COLOR="#663300">;
		}</FONT></B><FONT COLOR="#FF0000">
		return</FONT> mxRGB<B><FONT COLOR="#663300">((</FONT></B>Uint32<B><FONT COLOR="#663300">)-</FONT></B><FONT COLOR="#999900">1</FONT><B><FONT COLOR="#663300">);
	}</FONT></B><FONT COLOR="#FF6633">

	void</FONT> CopySurface<B><FONT COLOR="#663300">(</FONT></B>mxSurface<B><FONT COLOR="#663300"> *</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> w<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> h<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x2<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y2<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> w2<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> h2<B><FONT COLOR="#663300">) {</FONT></B>

		SDL_Rect rc<B><FONT COLOR="#663300"> = {</FONT></B> x<B><FONT COLOR="#663300">,</FONT></B>y<B><FONT COLOR="#663300">,</FONT></B>w<B><FONT COLOR="#663300">,</FONT></B>h<B><FONT COLOR="#663300"> };</FONT></B>
		SDL_Rect rc2<B><FONT COLOR="#663300"> = {</FONT></B> x2<B><FONT COLOR="#663300">,</FONT></B>y2<B><FONT COLOR="#663300">,</FONT></B>w2<B><FONT COLOR="#663300">,</FONT></B>h2<B><FONT COLOR="#663300">};</FONT></B>

		SDL_BlitSurface<B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">, &amp;</FONT></B>rc<B><FONT COLOR="#663300">,</FONT></B> front<B><FONT COLOR="#663300">.</FONT></B>surf<B><FONT COLOR="#663300">, &amp;</FONT></B>rc2<B><FONT COLOR="#663300"> );
	}</FONT></B><FONT COLOR="#FF6633">

	void</FONT> CopySurface<B><FONT COLOR="#663300">(</FONT></B>mxSurface<B><FONT COLOR="#663300"> *</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">) {</FONT></B>

		CopySurface<B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B> x<B><FONT COLOR="#663300">,</FONT></B>y<B><FONT COLOR="#663300">,</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>w<B><FONT COLOR="#663300">,</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>h<B><FONT COLOR="#663300">,</FONT></B> x<B><FONT COLOR="#663300">,</FONT></B>y<B><FONT COLOR="#663300">,</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>w<B><FONT COLOR="#663300">,</FONT></B> surf<B><FONT COLOR="#663300">-&gt;</FONT></B>surf<B><FONT COLOR="#663300">-&gt;</FONT></B>h<B><FONT COLOR="#663300">);
	}</FONT></B><FONT COLOR="#FF6633">

	void</FONT> CopySurface<B><FONT COLOR="#663300">(</FONT></B>mxSurface<B><FONT COLOR="#663300"> *</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> w<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> h<B><FONT COLOR="#663300">) {</FONT></B>

		CopySurface<B><FONT COLOR="#663300">(</FONT></B>surf<B><FONT COLOR="#663300">,</FONT></B> x<B><FONT COLOR="#663300">,</FONT></B>y<B><FONT COLOR="#663300">,</FONT></B>w<B><FONT COLOR="#663300">,</FONT></B>h<B><FONT COLOR="#663300">,</FONT></B> x<B><FONT COLOR="#663300">,</FONT></B>y<B><FONT COLOR="#663300">,</FONT></B>w<B><FONT COLOR="#663300">,</FONT></B>h<B><FONT COLOR="#663300">);
	}</FONT></B><FONT COLOR="#990000"> 

	virtual</FONT><FONT COLOR="#FF6633"> void</FONT> AlphaBlend<B><FONT COLOR="#663300">(</FONT></B>mxSurface<B><FONT COLOR="#663300"> *</FONT></B>one<B><FONT COLOR="#663300">,</FONT></B> mxSurface<B><FONT COLOR="#663300"> *</FONT></B>two<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> x<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> y<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> w<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> h<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> float</FONT> alpha<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF6633">

		float</FONT> fr<B><FONT COLOR="#663300">,</FONT></B> fg<B><FONT COLOR="#663300">,</FONT></B> fb<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#990000">
		static</FONT><FONT COLOR="#FF6633"> int</FONT> i<B><FONT COLOR="#663300">,</FONT></B> z<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

		for</FONT><B><FONT COLOR="#663300">(</FONT></B>i<B><FONT COLOR="#663300"> =</FONT></B> x<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> w<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

			for</FONT><B><FONT COLOR="#663300">(</FONT></B>z<B><FONT COLOR="#663300"> =</FONT></B> y<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300"> &lt;</FONT></B> h<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300">++) {</FONT></B>

				mxRGB color<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#990000"> this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>GetPixel<B><FONT COLOR="#663300">(</FONT></B>one<B><FONT COLOR="#663300">,</FONT></B> i<B><FONT COLOR="#663300">,</FONT></B>z<B><FONT COLOR="#663300">);</FONT></B>

				mxRGB color2<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#990000"> this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>GetPixel<B><FONT COLOR="#663300">(</FONT></B>two<B><FONT COLOR="#663300">,</FONT></B> i<B><FONT COLOR="#663300">,</FONT></B> z<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

				if</FONT><B><FONT COLOR="#663300">((</FONT></B>fr<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#FF6633"> float</FONT><B><FONT COLOR="#663300"> ( (</FONT></B>color<B><FONT COLOR="#663300">.</FONT></B>r<B><FONT COLOR="#663300"> *</FONT></B> alpha<B><FONT COLOR="#663300">) + (</FONT></B><FONT COLOR="#999900">1</FONT><B><FONT COLOR="#663300">-</FONT></B> alpha<B><FONT COLOR="#663300">) *</FONT></B> color2<B><FONT COLOR="#663300">.</FONT></B>r<B><FONT COLOR="#663300">)) &gt;</FONT></B><FONT COLOR="#999900"> 255</FONT><B><FONT COLOR="#663300">)</FONT></B> fr<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 255</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

				if</FONT><B><FONT COLOR="#663300">((</FONT></B>fg<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#FF6633"> float</FONT><B><FONT COLOR="#663300"> ( (</FONT></B>color<B><FONT COLOR="#663300">.</FONT></B>g<B><FONT COLOR="#663300"> *</FONT></B> alpha<B><FONT COLOR="#663300">) + (</FONT></B><FONT COLOR="#999900">1</FONT><B><FONT COLOR="#663300">-</FONT></B> alpha<B><FONT COLOR="#663300">) *</FONT></B> color2<B><FONT COLOR="#663300">.</FONT></B>g<B><FONT COLOR="#663300">)) &gt;</FONT></B><FONT COLOR="#999900"> 255</FONT><B><FONT COLOR="#663300">)</FONT></B> fg<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 255</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

				if</FONT><B><FONT COLOR="#663300">((</FONT></B>fb<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#FF6633"> float</FONT><B><FONT COLOR="#663300"> ( (</FONT></B>color<B><FONT COLOR="#663300">.</FONT></B>b<B><FONT COLOR="#663300"> *</FONT></B> alpha<B><FONT COLOR="#663300">) + (</FONT></B><FONT COLOR="#999900">1</FONT><B><FONT COLOR="#663300">-</FONT></B> alpha<B><FONT COLOR="#663300">) *</FONT></B> color2<B><FONT COLOR="#663300">.</FONT></B>b<B><FONT COLOR="#663300">)) &gt;</FONT></B><FONT COLOR="#999900"> 255</FONT><B><FONT COLOR="#663300">)</FONT></B> fb<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 255</FONT><B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#990000">

				this</FONT><B><FONT COLOR="#663300">-&gt;</FONT></B>SetPixel<B><FONT COLOR="#663300">(&amp;</FONT></B>front<B><FONT COLOR="#663300">,</FONT></B> i<B><FONT COLOR="#663300">,</FONT></B> z<B><FONT COLOR="#663300">,</FONT></B> mxRGB<B><FONT COLOR="#663300">(&amp;</FONT></B>front<B><FONT COLOR="#663300">,</FONT></B> Uint8<B><FONT COLOR="#663300">(</FONT></B>fr<B><FONT COLOR="#663300">),</FONT></B> Uint8<B><FONT COLOR="#663300">(</FONT></B>fg<B><FONT COLOR="#663300">),</FONT></B> Uint8<B><FONT COLOR="#663300">(</FONT></B>fb<B><FONT COLOR="#663300">)));
			}
		}
	}</FONT></B><FONT COLOR="#FF6633">

	void</FONT> Quit<B><FONT COLOR="#663300">() {</FONT></B>
		active<B><FONT COLOR="#663300"> =</FONT></B><B><FONT COLOR="#000000"> false</FONT></B><B><FONT COLOR="#663300">;
	}</FONT></B>
	mxSurface<B><FONT COLOR="#663300"> *</FONT></B>GetFront<B><FONT COLOR="#663300">() {</FONT></B><FONT COLOR="#FF0000"> return</FONT><B><FONT COLOR="#663300"> &amp;</FONT></B>front<B><FONT COLOR="#663300">; }</FONT></B><FONT COLOR="#990000">

protected</FONT><B><FONT COLOR="#663300">:</FONT></B>
	mxSurface front<B><FONT COLOR="#663300">;</FONT></B>
	EventHandler<B><FONT COLOR="#663300"> *</FONT></B>eventz<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#990000">
public</FONT><B><FONT COLOR="#663300">:</FONT></B><FONT COLOR="#FF6633">

	int</FONT> mouse_x<B><FONT COLOR="#663300">,</FONT></B> mouse_y<B><FONT COLOR="#663300">,</FONT></B> mouse_b<B><FONT COLOR="#663300">;
};</FONT></B><FONT COLOR="#000099">



#endif
</FONT></PRE>

</BODY>
</html>
