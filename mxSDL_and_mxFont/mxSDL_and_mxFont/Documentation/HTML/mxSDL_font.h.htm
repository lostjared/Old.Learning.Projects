<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>mxSDL_font.h</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset= Windows-1252">

</head>

<BODY BGCOLOR="#FFFFFF">
<PRE><FONT COLOR="#000099">#ifndef _MXFONT_H_
#define _MXFONT_H_
#include "mxSDL_msg.h"
#include&lt;fstream&gt;
#include&lt;string&gt;
</FONT><FONT COLOR="#990000">
inline</FONT><FONT COLOR="#FF6633"> int</FONT> getRval<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> x<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF0000">

    return</FONT><B><FONT COLOR="#663300"> (</FONT></B><FONT COLOR="#FF6633">unsigned char</FONT><B><FONT COLOR="#663300">)</FONT></B> x<B><FONT COLOR="#663300">;   
}</FONT></B><FONT COLOR="#990000">
inline</FONT><FONT COLOR="#FF6633"> int</FONT> getGval<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> x<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF0000">

       return</FONT><B><FONT COLOR="#663300"> (</FONT></B><FONT COLOR="#FF6633">unsigned char</FONT><B><FONT COLOR="#663300">) (</FONT></B><FONT COLOR="#FF6633">unsigned int</FONT><B><FONT COLOR="#663300">)</FONT></B> x<B><FONT COLOR="#663300"> &gt;&gt;</FONT></B><FONT COLOR="#999900"> 8</FONT><B><FONT COLOR="#663300">;
}</FONT></B><FONT COLOR="#990000">
inline</FONT><FONT COLOR="#FF6633"> int</FONT> getBval<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> x<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF0000">

       return</FONT><B><FONT COLOR="#663300"> ((</FONT></B><FONT COLOR="#FF6633">unsigned char</FONT><B><FONT COLOR="#663300">)((</FONT></B>x<B><FONT COLOR="#663300">)&gt;&gt;</FONT></B><FONT COLOR="#999900">16</FONT><B><FONT COLOR="#663300">));
}</FONT></B><FONT COLOR="#990000">
struct</FONT> mxFont<B><FONT COLOR="#663300"> {</FONT></B><FONT COLOR="#FF6633">

	int</FONT> mx<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
	int</FONT> my<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
	int</FONT> tcolor<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#990000">

	struct</FONT> letter<B><FONT COLOR="#663300"> {</FONT></B><FONT COLOR="#FF6633">
		int</FONT><B><FONT COLOR="#663300"> **</FONT></B>fnt_ptr<B><FONT COLOR="#663300">;
	};</FONT></B>
	letter letters<B><FONT COLOR="#663300">[</FONT></B><FONT COLOR="#999900">128</FONT><B><FONT COLOR="#663300">];
};</FONT></B><FONT COLOR="#990000">

template</FONT><B><FONT COLOR="#663300">&lt;</FONT></B><FONT COLOR="#990000">class</FONT> type<B><FONT COLOR="#663300">&gt;</FONT></B><FONT COLOR="#FF6633">
void</FONT> zero<B><FONT COLOR="#663300">(</FONT></B>type<B><FONT COLOR="#663300"> *</FONT></B>t<B><FONT COLOR="#663300">) {</FONT></B>
	memset<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">void</FONT><B><FONT COLOR="#663300">*)</FONT></B>t<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B>type<B><FONT COLOR="#663300">));
}</FONT></B><FONT COLOR="#FF6633">

void</FONT> free_font<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#990000">struct</FONT> mxFont<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">) {</FONT></B>

	zero<B><FONT COLOR="#663300">&lt;</FONT></B>mxFont<B><FONT COLOR="#663300">&gt;(</FONT></B>m<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

	for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> l<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300"> &lt;=</FONT></B><FONT COLOR="#999900"> 127</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">)</FONT></B><FONT COLOR="#FF0000">
			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#990000">

				delete</FONT><B><FONT COLOR="#663300"> []</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>i<B><FONT COLOR="#663300">];</FONT></B>

	m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B>
	m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;
}</FONT></B><FONT COLOR="#FF6633">

void</FONT> init_font<B><FONT COLOR="#663300">(</FONT></B>mxFont<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> width<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> height<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> int</FONT> color<B><FONT COLOR="#663300">) {</FONT></B>

	free_font<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">);</FONT></B>
	m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300"> =</FONT></B> width<B><FONT COLOR="#663300">;</FONT></B>
	m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300"> =</FONT></B> height<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

	for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> l<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300"> &lt;=</FONT></B><FONT COLOR="#999900"> 127</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300">++) {</FONT></B>

		m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#990000"> new</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">*[</FONT></B>width<B><FONT COLOR="#663300">];</FONT></B><FONT COLOR="#FF0000">

		for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> p<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300"> &lt;</FONT></B> width<B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300">++) {</FONT></B>

			m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">] =</FONT></B><FONT COLOR="#990000"> new</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">[</FONT></B>height<B><FONT COLOR="#663300">];
		}</FONT></B><FONT COLOR="#FF0000">

		for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> width<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++) {</FONT></B><FONT COLOR="#FF0000">

			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> z<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300"> &lt;</FONT></B> height<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300">++) {</FONT></B>

				m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>i<B><FONT COLOR="#663300">][</FONT></B>z<B><FONT COLOR="#663300">] =</FONT></B> color<B><FONT COLOR="#663300">;
			}
		}
	}</FONT></B>

	m<B><FONT COLOR="#663300">-&gt;</FONT></B>tcolor<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0x0</FONT><B><FONT COLOR="#663300">;
}</FONT></B><FONT COLOR="#FF6633">

void</FONT> write_font<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#990000">struct</FONT> mxFont<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#FF6633"> char</FONT><B><FONT COLOR="#663300"> *</FONT></B>font_name<B><FONT COLOR="#663300">) {</FONT></B>

	std<B><FONT COLOR="#663300">::</FONT></B>fstream file<B><FONT COLOR="#663300">;</FONT></B>
	file<B><FONT COLOR="#663300">.</FONT></B>open<B><FONT COLOR="#663300">(</FONT></B>font_name<B><FONT COLOR="#663300">,</FONT></B> std<B><FONT COLOR="#663300">::</FONT></B>ios<B><FONT COLOR="#663300">::</FONT></B>binary<B><FONT COLOR="#663300"> |</FONT></B> std<B><FONT COLOR="#663300">::</FONT></B>ios<B><FONT COLOR="#663300">::</FONT></B>out<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

	if</FONT><B><FONT COLOR="#663300">(</FONT></B>file<B><FONT COLOR="#663300">.</FONT></B>is_open<B><FONT COLOR="#663300">()) {</FONT></B><FONT COLOR="#FF6633">
		int</FONT> q<B><FONT COLOR="#663300"> = -</FONT></B><FONT COLOR="#999900">100</FONT><B><FONT COLOR="#663300">;</FONT></B>

		file<B><FONT COLOR="#663300">.</FONT></B>write<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>q<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000">sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>
		file<B><FONT COLOR="#663300">.</FONT></B>write<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>

		file<B><FONT COLOR="#663300">.</FONT></B>write<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>

		file<B><FONT COLOR="#663300">.</FONT></B>write<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>tcolor<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000">sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B><FONT COLOR="#FF0000">
		for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> l<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300"> &lt;</FONT></B><FONT COLOR="#999900"> 127</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#FF0000">

			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#FF0000"> 
				for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> z<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300">++)</FONT></B>

					file<B><FONT COLOR="#663300">.</FONT></B>write<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>i<B><FONT COLOR="#663300">][</FONT></B>z<B><FONT COLOR="#663300">],</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>

		file<B><FONT COLOR="#663300">.</FONT></B>close<B><FONT COLOR="#663300">();
	}
}</FONT></B><FONT COLOR="#FF6633">

bool</FONT> read_font<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#990000">struct</FONT> mxFont<B><FONT COLOR="#663300"> *</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> const</FONT><FONT COLOR="#FF6633"> char</FONT><B><FONT COLOR="#663300"> *</FONT></B>font_name<B><FONT COLOR="#663300">) {</FONT></B>

	std<B><FONT COLOR="#663300">::</FONT></B>fstream file<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
	int</FONT> mx<B><FONT COLOR="#663300"> ,</FONT></B> my<B><FONT COLOR="#663300">;</FONT></B>
	free_font<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">);</FONT></B>

	file<B><FONT COLOR="#663300">.</FONT></B>open<B><FONT COLOR="#663300">(</FONT></B>font_name<B><FONT COLOR="#663300">,</FONT></B> std<B><FONT COLOR="#663300">::</FONT></B>ios<B><FONT COLOR="#663300">::</FONT></B>binary<B><FONT COLOR="#663300"> |</FONT></B> std<B><FONT COLOR="#663300">::</FONT></B>ios<B><FONT COLOR="#663300">::</FONT></B>in<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

	if</FONT><B><FONT COLOR="#663300">(</FONT></B>file<B><FONT COLOR="#663300">.</FONT></B>is_open<B><FONT COLOR="#663300">() &amp;&amp;</FONT></B> file<B><FONT COLOR="#663300">.</FONT></B>good<B><FONT COLOR="#663300">()) {</FONT></B><FONT COLOR="#FF6633">
		int</FONT> q<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B>

		file<B><FONT COLOR="#663300">.</FONT></B>read<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>q<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000">sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B><FONT COLOR="#FF0000">
		if</FONT><B><FONT COLOR="#663300">(</FONT></B>q<B><FONT COLOR="#663300"> == -</FONT></B><FONT COLOR="#999900">100</FONT><B><FONT COLOR="#663300">) {</FONT></B>

			file<B><FONT COLOR="#663300">.</FONT></B>read<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>mx<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>
			file<B><FONT COLOR="#663300">.</FONT></B>read<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>my<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>

			file<B><FONT COLOR="#663300">.</FONT></B>read<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>tcolor<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));</FONT></B>

			m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300"> =</FONT></B> mx<B><FONT COLOR="#663300">;</FONT></B>
			m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300"> =</FONT></B> my<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF0000">

			if</FONT><B><FONT COLOR="#663300">(</FONT></B>mx<B><FONT COLOR="#663300"> &lt;</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300"> ||</FONT></B> mx<B><FONT COLOR="#663300"> &lt;</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300"> ||</FONT></B> mx<B><FONT COLOR="#663300"> &gt;</FONT></B><FONT COLOR="#999900"> 250</FONT><B><FONT COLOR="#663300"> ||</FONT></B> my<B><FONT COLOR="#663300"> &gt;</FONT></B><FONT COLOR="#999900"> 250</FONT><B><FONT COLOR="#663300">) {</FONT></B>

				file<B><FONT COLOR="#663300">.</FONT></B>close<B><FONT COLOR="#663300">();</FONT></B>
				init_font<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">20</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">25</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">0x0</FONT><B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">

				return</FONT><B><FONT COLOR="#000000"> false</FONT></B><B><FONT COLOR="#663300">;
			}</FONT></B><FONT COLOR="#FF0000">
			for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> l<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300"> &lt;=</FONT></B><FONT COLOR="#999900"> 127</FONT><B><FONT COLOR="#663300">;</FONT></B> l<B><FONT COLOR="#663300">++) {</FONT></B>

				m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#990000"> new</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">*[</FONT></B>mx<B><FONT COLOR="#663300">];</FONT></B><FONT COLOR="#FF0000">

				for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> p<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300"> &lt;</FONT></B> mx<B><FONT COLOR="#663300">;</FONT></B> p<B><FONT COLOR="#663300">++) {</FONT></B>

					m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>p<B><FONT COLOR="#663300">] =</FONT></B><FONT COLOR="#990000"> new</FONT><FONT COLOR="#FF6633"> int</FONT><B><FONT COLOR="#663300">[</FONT></B>my<B><FONT COLOR="#663300">];
				}</FONT></B><FONT COLOR="#FF0000">

				for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> i<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>mx<B><FONT COLOR="#663300">;</FONT></B> i<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#FF0000">

					for</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT> z<B><FONT COLOR="#663300"> =</FONT></B><FONT COLOR="#999900"> 0</FONT><B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300"> &lt;</FONT></B> m<B><FONT COLOR="#663300">-&gt;</FONT></B>my<B><FONT COLOR="#663300">;</FONT></B> z<B><FONT COLOR="#663300">++)</FONT></B><FONT COLOR="#FF0000">

						if</FONT><B><FONT COLOR="#663300">(!</FONT></B>file<B><FONT COLOR="#663300">.</FONT></B>eof<B><FONT COLOR="#663300">() &amp;&amp;</FONT></B> file<B><FONT COLOR="#663300">.</FONT></B>good<B><FONT COLOR="#663300">())</FONT></B>
							file<B><FONT COLOR="#663300">.</FONT></B>read<B><FONT COLOR="#663300">((</FONT></B><FONT COLOR="#FF6633">char</FONT><B><FONT COLOR="#663300">*)&amp;</FONT></B>m<B><FONT COLOR="#663300">-&gt;</FONT></B>letters<B><FONT COLOR="#663300">[</FONT></B>l<B><FONT COLOR="#663300">].</FONT></B>fnt_ptr<B><FONT COLOR="#663300">[</FONT></B>i<B><FONT COLOR="#663300">][</FONT></B>z<B><FONT COLOR="#663300">],</FONT></B><FONT COLOR="#990000"> sizeof</FONT><B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#FF6633">int</FONT><B><FONT COLOR="#663300">));
			}</FONT></B>

			file<B><FONT COLOR="#663300">.</FONT></B>close<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#FF0000">
			return</FONT><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300">;
		}</FONT></B><FONT COLOR="#FF0000">
		else</FONT><B><FONT COLOR="#663300"> {</FONT></B>

			zero<B><FONT COLOR="#663300">&lt;</FONT></B>mxFont<B><FONT COLOR="#663300">&gt;(</FONT></B>m<B><FONT COLOR="#663300">);</FONT></B>
			init_font<B><FONT COLOR="#663300">(</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">20</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">25</FONT><B><FONT COLOR="#663300">,</FONT></B><FONT COLOR="#999900">0x0</FONT><B><FONT COLOR="#663300">);</FONT></B>

			file<B><FONT COLOR="#663300">.</FONT></B>close<B><FONT COLOR="#663300">();</FONT></B><FONT COLOR="#FF0000">
			return</FONT><B><FONT COLOR="#000000"> false</FONT></B><B><FONT COLOR="#663300">;
		}
	}</FONT></B><FONT COLOR="#FF0000">

	return</FONT><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300">;
}</FONT></B><FONT COLOR="#990000">

class</FONT> mxText<B><FONT COLOR="#663300">  {</FONT></B><FONT COLOR="#990000">
public</FONT><B><FONT COLOR="#663300">:</FONT></B>
	mxText<B><FONT COLOR="#663300">(</FONT></B>std<B><FONT COLOR="#663300">::</FONT></B>string fnt_name<B><FONT COLOR="#663300">) {</FONT></B>

		loaded<B><FONT COLOR="#663300"> =</FONT></B> LoadFNT<B><FONT COLOR="#663300">(</FONT></B>fnt_name<B><FONT COLOR="#663300">);</FONT></B><FONT COLOR="#FF0000">
		if</FONT><B><FONT COLOR="#663300">(!(</FONT></B>loaded<B><FONT COLOR="#663300">))</FONT></B><FONT COLOR="#FF0000">
			throw</FONT> ErrorMsg<B><FONT COLOR="#663300">(</FONT></B>std<B><FONT COLOR="#663300">::</FONT></B>string<B><FONT COLOR="#663300">(</FONT></B><FONT COLOR="#009900">"Error Couldnt load Font "</FONT><B><FONT COLOR="#663300">) +</FONT></B> fnt_name<B><FONT COLOR="#663300"> +</FONT></B><FONT COLOR="#009900"> "\n"</FONT><B><FONT COLOR="#663300">);
	}</FONT></B>

	mxText<B><FONT COLOR="#663300">() {</FONT></B>
		loaded<B><FONT COLOR="#663300"> =</FONT></B><B><FONT COLOR="#000000"> false</FONT></B><B><FONT COLOR="#663300">;</FONT></B>
		zero<B><FONT COLOR="#663300">(&amp;</FONT></B>m<B><FONT COLOR="#663300">);
	}
	~</FONT></B>mxText<B><FONT COLOR="#663300">() {</FONT></B><FONT COLOR="#FF0000">

		if</FONT><B><FONT COLOR="#663300">(</FONT></B>loaded<B><FONT COLOR="#663300"> ==</FONT></B><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300">) {</FONT></B>
			free_font<B><FONT COLOR="#663300">(&amp;</FONT></B>m<B><FONT COLOR="#663300">);
		}
	}</FONT></B><FONT COLOR="#FF6633">
	bool</FONT> LoadFNT<B><FONT COLOR="#663300">(</FONT></B>std<B><FONT COLOR="#663300">::</FONT></B>string fnt_name<B><FONT COLOR="#663300">) {</FONT></B><FONT COLOR="#FF0000">

		return</FONT><B><FONT COLOR="#663300"> (</FONT></B>loaded<B><FONT COLOR="#663300"> =</FONT></B> read_font<B><FONT COLOR="#663300">(&amp;</FONT></B>m<B><FONT COLOR="#663300">,</FONT></B> fnt_name<B><FONT COLOR="#663300">.</FONT></B>c_str<B><FONT COLOR="#663300">()));
	}</FONT></B><FONT COLOR="#FF6633">

	void</FONT> FreeFNT<B><FONT COLOR="#663300">() {</FONT></B><FONT COLOR="#FF0000">
		if</FONT><B><FONT COLOR="#663300">(</FONT></B>loaded<B><FONT COLOR="#663300"> ==</FONT></B><B><FONT COLOR="#000000"> true</FONT></B><B><FONT COLOR="#663300">) {</FONT></B>

			free_font<B><FONT COLOR="#663300">(&amp;</FONT></B>m<B><FONT COLOR="#663300">);
		}
	}</FONT></B>

	mxFont<B><FONT COLOR="#663300"> *</FONT></B>GetFont<B><FONT COLOR="#663300">() {</FONT></B><FONT COLOR="#FF0000"> return</FONT><B><FONT COLOR="#663300"> &amp;</FONT></B>m<B><FONT COLOR="#663300">; }</FONT></B><FONT COLOR="#990000">

protected</FONT><B><FONT COLOR="#663300">:</FONT></B>
	mxFont m<B><FONT COLOR="#663300">;</FONT></B><FONT COLOR="#FF6633">
	bool</FONT> loaded<B><FONT COLOR="#663300">;
};</FONT></B><FONT COLOR="#000099">

#endif</FONT></PRE>
</BODY>

</html>
